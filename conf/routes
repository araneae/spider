# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                                       controllers.Application.index

GET    /login                                                   controllers.AuthController.login

POST   /login                                                   controllers.AuthController.authenticate

GET    /login/password/:token/recover                           controllers.AuthController.formRecoverPassword(token: String)

POST   /login/password/:token/recover                           controllers.AuthController.recoverPassword(token: String)

GET    /login/password/:token/reset                             controllers.AuthController.formResetPassword(token: String)

POST   /login/password/:token/reset                             controllers.AuthController.resetPassword(token: String)

GET    /logout                                                  controllers.AuthController.logout

GET    /activation/:token/resend                                controllers.AuthController.resend(token: String)

GET    /activation/:token/activate                              controllers.AuthController.activate(token: String)

GET    /home                                                    controllers.Application.home

GET    /signup                                                  controllers.Application.signup

POST   /signup                                                  controllers.Application.register

# Enum Types support
GET    /enum                                                    controllers.EnumController.getAll

# Settings

GET    /userProfile                                             controllers.UserProfileController.get

POST   /userProfile                                             controllers.UserProfileController.save

POST   /userProfile/email/sendCode                              controllers.UserProfileController.sendEmailVerificationCode

PUT    /userProfile/email                                       controllers.UserProfileController.updateEmail

# Company

GET    /company                                                 controllers.CompanyController.get

POST   /company                                                 controllers.CompanyController.save

# Company user
POST   /companyUser                                             controllers.CompanyUserController.create

GET    /companyUser                                             controllers.CompanyUserController.getAll

GET    /companyUser/:companyUserId                              controllers.CompanyUserController.get(companyUserId: Long)

PUT    /companyUser/:companyUserId                              controllers.CompanyUserController.update(companyUserId: Long)

DELETE /companyUser/:companyUserId                              controllers.CompanyUserController.delete(companyUserId: Long)

# Admin specific routes
GET    /admin                                                   controllers.AdminController.admin

# Industry specific routes
POST   /industry                                                controllers.IndustryController.create

GET    /industry                                                controllers.IndustryController.getAll

GET    /industry/:industryId                                    controllers.IndustryController.get(industryId: Long)

PUT    /industry/:industryId                                    controllers.IndustryController.update(industryId: Long)

DELETE /industry/:industryId                                    controllers.IndustryController.delete(industryId: Long)

# Skill specific routes
POST   /skill                                                   controllers.SkillController.create

GET    /skill                                                   controllers.SkillController.getAll

PUT    /skill/:skillId                                          controllers.SkillController.update(skillId: Int)

DELETE /skill/:skillId                                          controllers.SkillController.delete(skillId: Int)

# Domain specific routes
POST   /domain                                                  controllers.DomainController.create

GET    /domain                                                  controllers.DomainController.getAll

GET    /domain/:domainId                                        controllers.DomainController.get(domainId: Long)

PUT    /domain/:domainId                                        controllers.DomainController.update(domainId: Long)

DELETE /domain/:domainId                                        controllers.DomainController.delete(domainId: Long)

# JobTitle specific routes
POST   /jobTitle                                                controllers.JobTitleController.create

GET    /jobTitle                                                controllers.JobTitleController.getAll

GET    /jobTitle/:jobTitleId                                    controllers.JobTitleController.get(jobTitleId: Long)

PUT    /jobTitle/:jobTitleId                                    controllers.JobTitleController.update(jobTitleId: Long)

DELETE /jobTitle/:jobTitleId                                    controllers.JobTitleController.delete(jobTitleId: Long)

# JobRequirement specific routes
POST   /jobRequirement                                          controllers.JobRequirementController.create

GET    /jobRequirement                                          controllers.JobRequirementController.getAll

GET    /jobRequirement/:jobRequirementId                        controllers.JobRequirementController.get(jobRequirementId: Long)

PUT    /jobRequirement/:jobRequirementId                        controllers.JobRequirementController.update(jobRequirementId: Long)

DELETE /jobRequirement/:jobRequirementId                        controllers.JobRequirementController.delete(jobRequirementId: Long)

# UserSkill specific routes
POST   /userSkill/:skillId                                      controllers.UserSkillController.create(skillId: Int)

GET    /userSkill/:skillId                                      controllers.UserSkillController.get(skillId: Int)

GET    /userSkill                                               controllers.UserSkillController.getAll

PUT    /userSkill/:skillId                                      controllers.UserSkillController.update(skillId: Int)

DELETE /userSkill/:skillId                                      controllers.UserSkillController.delete(skillId: Int)

GET    /skillLevel                                              controllers.UserSkillController.getSkillLevels

# Contact specific routes
GET    /contact/:contactUserId                                  controllers.ContactController.get(contactUserId: Long)

GET    /contact                                                 controllers.ContactController.getAll

DELETE /contact/:contactUserId                                  controllers.ContactController.delete(contactUserId: Long)

GET    /contact/search/:email                                   controllers.ContactController.search(email: String)

GET    /contact/accept/:token                                   controllers.ContactController.accept(token: String)

GET    /contact/invite/:contactUserId                           controllers.ContactController.inviteMessage(contactUserId: Long)

POST   /contact/invite/:contactUserId                           controllers.ContactController.invite(contactUserId: Long)

POST   /contact/invite/:contactUserId/accept                    controllers.ContactController.acceptInvitation(contactUserId: Long)

POST   /contact/invite/:contactUserId/reject                    controllers.ContactController.rejectInvitation(contactUserId: Long)

# Adviser specific routes
POST   /adviser/:adviserUserId                                  controllers.AdviserController.create(adviserUserId: Int)

GET    /adviser/:adviserUserId                                  controllers.AdviserController.get(adviserUserId: Int)

GET    /adviser                                                 controllers.AdviserController.getAll

DELETE /adviser/:adviserUserId                                  controllers.AdviserController.delete(adviserUserId: Int)

GET    /adviser/search/:email                                   controllers.AdviserController.search(email: String)

GET    /adviser/accept/:token                                   controllers.AdviserController.accept(token: String)

# Database specific routes
POST   /database/upload                                         controllers.DatabaseController.upload

GET    /database/document/:documentId/contact                   controllers.DatabaseController.getShareContacts(documentId: Long)

GET    /database/repository/contact                             controllers.DatabaseController.getRepositoryShareContacts

GET    /database/download/:documentId                           controllers.DatabaseController.download(documentId: Long)

GET    /database/document/:documentId                           controllers.DatabaseController.get(documentId: Long)

GET    /database/document/usertag/:userTagId                    controllers.DatabaseController.getAllByUserTagId(userTagId: Long)

POST   /database/document                                       controllers.DatabaseController.create

PUT    /database/document/:documentId                           controllers.DatabaseController.update(documentId: Long)

DELETE /database/document/:documentId                           controllers.DatabaseController.delete(documentId: Long)

GET    /database/search/:userTagId/:searchText                  controllers.DatabaseController.search(userTagId: Long, searchText: String)

GET    /database/document/:documentId/search                    controllers.DatabaseController.searchDocument(documentId: Long)

GET    /database/document/:documentId/contents                  controllers.DatabaseController.getContents(documentId: Long)

POST   /database/document/:documentId/share                     controllers.DatabaseController.share(documentId: Long)

PUT    /database/document/:documentId/share                     controllers.DatabaseController.updateShare(documentId: Long)

POST   /database/document/:documentId/copy                      controllers.DatabaseController.copy(documentId: Long)

POST   /database/repository/share                               controllers.DatabaseController.shareRepository

# Shared Repository
GET    /shared/repository/document                              controllers.SharedDocumentController.getAll

GET    /shared/repository/document/:documentId                  controllers.SharedDocumentController.get(documentId: Long)

GET    /shared/repository/document/:documentId/contents         controllers.SharedDocumentController.getContents(documentId: Long)

GET    /shared/repository/search/:searchText                    controllers.SharedDocumentController.search(searchText: String)

GET    /shared/document/:documentId/search                      controllers.SharedDocumentController.searchDocument(documentId: Long)

POST   /shared/document/:documentId/copy                        controllers.SharedDocumentController.copy(documentId: Long)

# UserTag specific routes
POST   /userTag                                                 controllers.UserTagController.create

GET    /userTag/:userTagId                                      controllers.UserTagController.get(userTagId: Int)

GET    /userTag                                                 controllers.UserTagController.getAll

PUT    /userTag/:userTagId                                      controllers.UserTagController.update(userTagId: Int)

DELETE /userTag/:userTagId                                      controllers.UserTagController.delete(userTagId: Int)

# DocumentTag specific routes
POST   /database/documentTag/:documentId                        controllers.DocumentTagController.create(documentId: Int)

GET    /database/documentTag/:documentId                        controllers.DocumentTagController.getAll(documentId: Int)

DELETE /database/documentTag/:documentId                        controllers.DocumentTagController.delete(documentId: Int, userTagId: Int)

# Document Search specific routes
GET    /database/documentSearch                                 controllers.DocumentSearchController.getAll

POST   /database/documentSearch                                 controllers.DocumentSearchController.create

PUT    /database/documentSearch/:documentSearchId               controllers.DocumentSearchController.update(documentSearchId: Int)

DELETE /database/documentSearch/:documentSearchId               controllers.DocumentSearchController.delete(documentSearchId: Int)

# Share document related routes
GET   /connection                                               controllers.ConnectionController.getAll

# message specific routes
POST   /message                                                 controllers.MessageController.create

GET    /message/:messageId                                      controllers.MessageController.get(messageId: Int)

GET    /message                                                 controllers.MessageController.getAll

DELETE /message/:messageId                                      controllers.MessageController.delete(messageId: Int)

GET    /message/star/mark/:messageId                            controllers.MessageController.markStar(messageId: Int)

GET    /message/star/remove/:messageId                          controllers.MessageController.removeStar(messageId: Int)

GET    /message/important/mark/:messageId                       controllers.MessageController.markImportant(messageId: Int)

GET    /message/important/remove/:messageId                     controllers.MessageController.removeImportant(messageId: Int)

GET    /message/read/mark/:messageId                            controllers.MessageController.markRead(messageId: Int)

POST   /message/reply/:messageId                                controllers.MessageController.reply(messageId: Int)

GET    /message/trash/:messageId                                controllers.MessageController.trash(messageId: Int)

GET    /message/:messageId/move/:messageBoxId                   controllers.MessageController.move(messageId: Int, messageBoxId: Int)

# message box specific routes
GET    /messagebox                                              controllers.MessageBoxController.getAll

PUT    /messagebox/:messageBoxId                                controllers.MessageBoxController.rename(messageBoxId: Int)

POST   /messagebox                                              controllers.MessageBoxController.create

# country

GET    /country                                                 controllers.CountryController.getAll

POST   /country                                                 controllers.CountryController.create

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                           controllers.Assets.at(path="/public", file)
